;; -*- lexical-binding: t -*-

(defun c-lineup-arglist-tabs-only (ignored)
  "Line up argument lists by tabs, not spaces"
  (let* ((anchor (c-langelem-pos c-syntactic-element))
         (column (c-langelem-2nd-pos c-syntactic-element))
         (offset (- (1+ column) anchor))
         (steps (floor offset c-basic-offset)))
    (* (max steps 1)
       c-basic-offset)))

(c-add-style "linux-kernel"
	     '("linux"
	       (c-basic-offset . 8)
	       (c-label-minimum-indentation . 0)
	       (c-offsets-alist . ((arglist-close         . c-lineup-arglist-tabs-only)
				   (arglist-cont-nonempty . (c-lineup-gcc-asm-reg c-lineup-arglist-tabs-only))
				   (arglist-intro         . +)
				   (brace-list-intro      . +)
				   (c                     . c-lineup-C-comments)
				   (case-label            . 0)
				   (comment-intro         . c-lineup-comment)
				   (cpp-define-intro      . +)
				   (cpp-macro             . -1000)
				   (cpp-macro-cont        . +)
				   (defun-block-intro     . +)
				   (else-clause           . 0)
				   (func-decl-cont        . +)
				   (inclass               . +)
				   (inher-cont            . c-lineup-multi-inher)
				   (knr-argdecl-intro     . 0)
				   (label                 . -1000)
				   (statement             . 0)
				   (statement-block-intro . +)
				   (statement-case-intro  . +)
				   (statement-cont        . +)
				   (substatement          . +)))
	       (indent-tabs-mode . t)
	       (show-trailing-whitespace . t)))

(defun use-my-c-style ()
  (set-fill-column 80)
  (display-fill-column-indicator-mode 1)
  (c-set-style "linux-kernel"))

(add-hook 'c-mode-hook 'use-my-c-style)
(add-hook 'c++-mode-hook 'use-my-c-style)
